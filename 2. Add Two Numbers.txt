/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int remain = 0;
        ListNode *l3 = new ListNode(addSingleDigit((*l1).val,(*l2).val,&remain));
        ListNode *tail = l3;
        
        while(l1->next != NULL)
        {
           tail->next = new ListNode(addSingleDigit(l1->next->val, 0, &remain));
           tail = tail->next;
           l1 = l1->next;
        }
        if(remain==1)
        {
           tail->next = new ListNode(1);
           tail = tail->next;
        }
        tail = l3;
        remain = 0;
        while(tail->next != NULL && l2->next != NULL)
        {
           tail->next->val = addSingleDigit(l2->next->val, tail->next->val, &remain);
           tail = tail->next;
           l2 = l2->next;
        }
        while(l2->next != NULL)
        {
           tail->next = new ListNode(addSingleDigit(l2->next->val, 0, &remain));
           tail = tail->next;
           l2 = l2->next;
        }
        if(remain==1)
        {
           tail->next = new ListNode(1);
           tail = tail->next;
        }
        
        return l3;
    }
   int addSingleDigit(int a, int b, int* remain)
   {
       int sum = a + b + (*remain);
       
        if(sum>9)
        {
            *remain = 1;
            return sum-10;
        }
            
        else
        {
            *remain = 0;
            return sum;
        }
            
   }
};